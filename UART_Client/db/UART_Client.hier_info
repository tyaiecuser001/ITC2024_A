|TOP
iCLK => iCLK.IN1
RST_n => RST_n.IN1
select_w => select_w.IN1
tx_en => tx_en.IN1
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
rx => rx.IN1
tx << UART_Client:UART_Client_u1.tx
Client_wifi_txd << UART_Client:UART_Client_u1.Client_wifi_txd
RST_WiFi << UART_Client:UART_Client_u1.RST_WiFi


|TOP|UART_Client:UART_Client_u1
iCLK => iCLK.IN4
RST_n => RST_n.IN4
select_w => select_w.IN2
tx_en => tx_en.IN1
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
rx => rx.IN1
tx <= uart_tx:uart_tx_u1.tx
Client_wifi_txd <= rx.DB_MAX_OUTPUT_PORT_TYPE
RST_WiFi <= RST_n.DB_MAX_OUTPUT_PORT_TYPE


|TOP|UART_Client:UART_Client_u1|uart_tx:uart_tx_u1
iCLK => iCLK.IN1
RST_n => Send_addr_w[0].ACLR
RST_n => Send_addr_w[1].ACLR
RST_n => Send_addr_w[2].ACLR
RST_n => Send_addr_w[3].ACLR
RST_n => Send_addr_w[4].ACLR
RST_n => Send_addr_w[5].ACLR
RST_n => Send_addr_w[6].ACLR
RST_n => Send_addr_w[7].ACLR
RST_n => start_cnt.ACLR
RST_n => addr[0].ACLR
RST_n => addr[1].ACLR
RST_n => addr[2].ACLR
RST_n => addr[3].ACLR
RST_n => addr[4].ACLR
RST_n => addr[5].ACLR
RST_n => addr[6].ACLR
RST_n => addr[7].ACLR
RST_n => enable.ACLR
RST_n => tx~reg0.PRESET
RST_n => receive_ok_en~reg0.ACLR
RST_n => cnt_baud[0].ACLR
RST_n => cnt_baud[1].ACLR
RST_n => cnt_baud[2].ACLR
RST_n => cnt_baud[3].ACLR
RST_n => cnt_baud[4].ACLR
RST_n => cnt_baud[5].ACLR
RST_n => cnt_baud[6].ACLR
RST_n => cnt_baud[7].ACLR
RST_n => cnt_baud[8].ACLR
RST_n => cnt_bit[0].ACLR
RST_n => cnt_bit[1].ACLR
RST_n => cnt_bit[2].ACLR
RST_n => cnt_rom[0].ACLR
RST_n => cnt_rom[1].ACLR
RST_n => cnt_rom[2].ACLR
RST_n => cnt_rom[3].ACLR
RST_n => SEND_END_cmd.ACLR
RST_n => btn.ACLR
RST_n => SEND_DATA_en.PRESET
RST_n => stage_tx~4.DATAIN
select_w => btn.OUTPUTSELECT
tx_en => stage_tx.OUTPUTSELECT
tx_en => stage_tx.OUTPUTSELECT
tx_en => stage_tx.OUTPUTSELECT
tx_en => stage_tx.OUTPUTSELECT
tx_en => addr.OUTPUTSELECT
tx_en => addr.OUTPUTSELECT
tx_en => addr.OUTPUTSELECT
tx_en => addr.OUTPUTSELECT
tx_en => addr.OUTPUTSELECT
tx_en => addr.OUTPUTSELECT
tx_en => addr.OUTPUTSELECT
tx_en => addr.OUTPUTSELECT
tx_en => enable.ENA
tx_en => start_cnt.ENA
tx_en => Send_addr_w[7].ENA
tx_en => Send_addr_w[6].ENA
tx_en => Send_addr_w[5].ENA
tx_en => Send_addr_w[4].ENA
tx_en => Send_addr_w[3].ENA
tx_en => Send_addr_w[2].ENA
tx_en => Send_addr_w[1].ENA
tx_en => Send_addr_w[0].ENA
LED_select[0] => Mux0.IN10
LED_select[0] => Mux1.IN10
LED_select[0] => Mux2.IN10
LED_select[0] => Mux3.IN9
LED_select[0] => Mux4.IN9
LED_select[0] => Mux5.IN9
LED_select[0] => Mux6.IN8
LED_select[0] => Mux7.IN6
LED_select[1] => Mux0.IN9
LED_select[1] => Mux1.IN9
LED_select[1] => Mux2.IN9
LED_select[1] => Mux3.IN8
LED_select[1] => Mux4.IN8
LED_select[1] => Mux5.IN8
LED_select[1] => Mux6.IN7
LED_select[1] => Mux7.IN5
LED_select[2] => Mux0.IN8
LED_select[2] => Mux1.IN8
LED_select[2] => Mux2.IN8
LED_select[2] => Mux3.IN7
LED_select[2] => Mux4.IN7
LED_select[2] => Mux5.IN7
LED_select[2] => Mux6.IN6
LED_select[2] => Mux7.IN4
receiver_OK => ok.IN1
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
receive_ok_en <= receive_ok_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP|UART_Client:UART_Client_u1|uart_tx:uart_tx_u1|AT_ROM:AT
addr[0] => rom.RADDR
addr[1] => rom.RADDR1
addr[2] => rom.RADDR2
addr[3] => rom.RADDR3
addr[4] => rom.RADDR4
addr[5] => rom.RADDR5
addr[6] => rom.RADDR6
addr[7] => rom.RADDR7
clk => ~NO_FANOUT~
q[0] <= rom.DATAOUT
q[1] <= rom.DATAOUT1
q[2] <= rom.DATAOUT2
q[3] <= rom.DATAOUT3
q[4] <= rom.DATAOUT4
q[5] <= rom.DATAOUT5
q[6] <= rom.DATAOUT6
q[7] <= rom.DATAOUT7


|TOP|UART_Client:UART_Client_u1|uart_rx:uart_rx_u2
iCLK => cnt_bit[0].CLK
iCLK => cnt_bit[1].CLK
iCLK => cnt_bit[2].CLK
iCLK => cnt_baud[0].CLK
iCLK => cnt_baud[1].CLK
iCLK => cnt_baud[2].CLK
iCLK => cnt_baud[3].CLK
iCLK => cnt_baud[4].CLK
iCLK => cnt_baud[5].CLK
iCLK => cnt_baud[6].CLK
iCLK => cnt_baud[7].CLK
iCLK => cnt_baud[8].CLK
iCLK => rxd[0]~reg0.CLK
iCLK => rxd[1]~reg0.CLK
iCLK => rxd[2]~reg0.CLK
iCLK => rxd[3]~reg0.CLK
iCLK => rxd[4]~reg0.CLK
iCLK => rxd[5]~reg0.CLK
iCLK => rxd[6]~reg0.CLK
iCLK => rxd[7]~reg0.CLK
iCLK => RECEIVE_END~reg0.CLK
iCLK => bps_rx_clk_en.CLK
iCLK => rx_data[0].CLK
iCLK => rx_data[1].CLK
iCLK => rx_data[2].CLK
iCLK => rx_data[3].CLK
iCLK => rx_data[4].CLK
iCLK => rx_data[5].CLK
iCLK => rx_data[6].CLK
iCLK => rx_data[7].CLK
iCLK => rx_done.CLK
iCLK => R_receiving.CLK
iCLK => rx_reg3.CLK
iCLK => rx_reg2.CLK
iCLK => rx_reg1.CLK
iCLK => rx_reg0.CLK
iCLK => stage_rx~1.DATAIN
RST_n => RECEIVE_END~reg0.ACLR
RST_n => bps_rx_clk_en.ACLR
RST_n => rx_data[0].ACLR
RST_n => rx_data[1].ACLR
RST_n => rx_data[2].ACLR
RST_n => rx_data[3].ACLR
RST_n => rx_data[4].ACLR
RST_n => rx_data[5].ACLR
RST_n => rx_data[6].ACLR
RST_n => rx_data[7].ACLR
RST_n => rx_done.ACLR
RST_n => rx_reg3.ACLR
RST_n => rx_reg2.ACLR
RST_n => rx_reg1.ACLR
RST_n => rx_reg0.ACLR
RST_n => R_receiving.ACLR
RST_n => cnt_baud[0].ACLR
RST_n => cnt_baud[1].ACLR
RST_n => cnt_baud[2].ACLR
RST_n => cnt_baud[3].ACLR
RST_n => cnt_baud[4].ACLR
RST_n => cnt_baud[5].ACLR
RST_n => cnt_baud[6].ACLR
RST_n => cnt_baud[7].ACLR
RST_n => cnt_baud[8].ACLR
RST_n => cnt_bit[0].ACLR
RST_n => cnt_bit[1].ACLR
RST_n => cnt_bit[2].ACLR
RST_n => stage_rx~3.DATAIN
RST_n => rxd[7]~reg0.ENA
RST_n => rxd[6]~reg0.ENA
RST_n => rxd[5]~reg0.ENA
RST_n => rxd[4]~reg0.ENA
RST_n => rxd[3]~reg0.ENA
RST_n => rxd[2]~reg0.ENA
RST_n => rxd[1]~reg0.ENA
RST_n => rxd[0]~reg0.ENA
rx => rx_data.DATAB
rx => rx_data.DATAB
rx => rx_data.DATAB
rx => rx_data.DATAB
rx => rx_data.DATAB
rx => rx_data.DATAB
rx => rx_data.DATAB
rx => rx_data.DATAB
rx => rx_reg0.DATAIN
rxd[0] <= rxd[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rxd[1] <= rxd[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rxd[2] <= rxd[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rxd[3] <= rxd[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rxd[4] <= rxd[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rxd[5] <= rxd[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rxd[6] <= rxd[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rxd[7] <= rxd[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RECEIVE_END <= RECEIVE_END~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP|UART_Client:UART_Client_u1|receiver_OK:receiver_OK_u1
iCLK => OK.CLK
iCLK => state~1.DATAIN
RST_n => OK.ACLR
RST_n => state~3.DATAIN
RECEIVE_END => OK.OUTPUTSELECT
RECEIVE_END => state.OUTPUTSELECT
RECEIVE_END => state.OUTPUTSELECT
RECEIVE_END => state.OUTPUTSELECT
RECEIVE_END => state.OUTPUTSELECT
receive_ok_en => OK.OUTPUTSELECT
rxd[0] => Equal0.IN4
rxd[0] => Equal1.IN3
rxd[0] => Equal2.IN2
rxd[0] => Equal3.IN7
rxd[1] => Equal0.IN3
rxd[1] => Equal1.IN2
rxd[1] => Equal2.IN7
rxd[1] => Equal3.IN1
rxd[2] => Equal0.IN2
rxd[2] => Equal1.IN7
rxd[2] => Equal2.IN1
rxd[2] => Equal3.IN6
rxd[3] => Equal0.IN1
rxd[3] => Equal1.IN1
rxd[3] => Equal2.IN0
rxd[3] => Equal3.IN0
rxd[4] => Equal0.IN7
rxd[4] => Equal1.IN6
rxd[4] => Equal2.IN6
rxd[4] => Equal3.IN5
rxd[5] => Equal0.IN6
rxd[5] => Equal1.IN5
rxd[5] => Equal2.IN5
rxd[5] => Equal3.IN4
rxd[6] => Equal0.IN0
rxd[6] => Equal1.IN0
rxd[6] => Equal2.IN4
rxd[6] => Equal3.IN3
rxd[7] => Equal0.IN5
rxd[7] => Equal1.IN4
rxd[7] => Equal2.IN3
rxd[7] => Equal3.IN2
receiver_OK <= OK.DB_MAX_OUTPUT_PORT_TYPE


|TOP|UART_Client:UART_Client_u1|Select_mode:Select_mode_u1
iCLK => LED_select[0]~reg0.CLK
iCLK => LED_select[1]~reg0.CLK
iCLK => LED_select[2]~reg0.CLK
RST_n => LED_select[0]~reg0.ACLR
RST_n => LED_select[1]~reg0.ACLR
RST_n => LED_select[2]~reg0.ACLR
select_w => LED_select[0]~reg0.ENA
select_w => LED_select[2]~reg0.ENA
select_w => LED_select[1]~reg0.ENA
SW[0] => LED_select[0]~reg0.DATAIN
SW[1] => LED_select[1]~reg0.DATAIN
SW[2] => LED_select[2]~reg0.DATAIN
LED_select[0] <= LED_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED_select[1] <= LED_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED_select[2] <= LED_select[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


